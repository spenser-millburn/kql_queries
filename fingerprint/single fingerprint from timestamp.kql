let _endTime = datetime(2024-09-12T22:54:01Z);
let _startTime = datetime(2024-08-13T22:54:01Z);
let bot = dynamic(null);
let faultID = dynamic(null);
let no_faults = dynamic(['05_12_00']);
let sites = dynamic(null);
let swVer = dynamic(null);
let fn_CheckFaultSequence = (fault_id: string, timestamp: datetime, previous_fault_id: string, previous_timestamp: datetime, current_grid_id: string, previous_grid_id: string) 
{
    let time_diff = datetime_diff('second', previous_timestamp, timestamp);
    fault_id == "0C_05_00" 
    and previous_fault_id == "05_07_00"
    and time_diff <= 60
    and current_grid_id == previous_grid_id;
};
let fn_GetFatalFaultsFromBotStats_BySite_ByTimespan = (site: string, clustername:string, date1: datetime, date2: datetime, bot: dynamic, faultID: dynamic, no_faults: dynamic)
 		{
			let BS = cluster(clustername).database(site).BotStats
			// | where timestamp  between (['_startTime'] .. ['_endTime']) and __msg_t == 13
      | where timestamp > ago(30d)
			| where isempty(['bot']) or __grid_id in (bot)
			| where isempty(['faultID']) or fault_id in (faultID)
      | where isempty(['swVer']) or __ab_ver in (swVer)
			| where fault_id !in (no_faults)
      | extend SplitUCC = split(current_ucc, ':')
      | extend AreaType = tostring(array_slice(SplitUCC, 0, 0))
      | where AreaType !has "0." or AreaType has "0.0"
      | project-away SplitUCC, AreaType
			| project fault_info= case(isempty(fault_info), "{fault_info_blank}", fault_info), fault_id, fault_type, timestamp, __grid_id
			// | extend MSG = strcat(" ", fault_id, " : ", fault_info, " ")
			// | summarize COUNT = count() by fault_id, MSG
			// | order by fault_id desc
			// | order by COUNT desc
			;
			BS
			;
		}
 ;
  let Walmart_0100 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_0100', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_0125 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_0125', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_0144 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_0144', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_0277 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_0277', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_0444 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_0444', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};  
  let Walmart_0517 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_0517', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_1148 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_1148', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_1413 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_1413', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_2740 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_2740', 'adx-adm-prod-grp3.eastus2'       , ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_2932 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_2932', 'adx-adm-prod-grp1.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_3207 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_3207', 'adx-adm-prod-grp3.eastus2'       , ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_3226 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_3226', 'adx-adm-prod-grp2.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};    
  let Walmart_3258 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_3258', 'adx-adm-prod-grp4.westus2'       , ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_3267 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_3267', 'adx-adm-prod-grp2.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};  
  let Walmart_3278 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_3278', 'adx-adm-prod-grp2.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};  
  let Walmart_3295 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_3295', 'adx-adm-prod-grp2.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_5092 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_5092', 'adx-adm-prod-grp2.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
  let Walmart_5236 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_5236', 'adx-adm-prod-grp2.southcentralus', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])}; 
  let fatalts = datetime(2024-09-02T16:30:15.42561Z);
  let gridid = "B02000037X";
  //let Walmart_5260 = view() {fn_GetFatalFaultsFromBotStats_BySite_ByTimespan('Walmart_5260', ['_startTime'], ['_endTime'], ['bot'], ['faultID'], ['no_faults'])};
// union withsource=SourceName Walmart_0100//, Walmart_0125 //Walmart_0144, Walmart_0277, Walmart_0444, Walmart_0517, Walmart_1148, Walmart_1413, Walmart_2740, Walmart_2932, Walmart_3207, Walmart_3226, Walmart_3258, Walmart_3267, Walmart_3278, Walmart_3295, Walmart_5092, Walmart_5236
let GetFaults = (gridid:string, fatalts:datetime) {
    Walmart_0100
    | where timestamp between (datetime_add("minute", -2, fatalts) .. fatalts)  // Time range: 2 minutes before the fatal timestamp to the fatal timestamp
    | where __grid_id == gridid
    | where fault_type == "Warning" or fault_type == "Fatal"  // Filter for Warning or Fatal faults
    | order by timestamp asc  // Ensure faults are ordered chronologically
    | summarize make_list(fault_id)  // Aggregate fault IDs into a list
};
GetFaults("B02000037X", datetime(2024-09-02T16:30:15.42561Z))
// Walmart_0100 
//     | where timestamp between (datetime_add("minute", -2, fatalts)..fatalts)  // Adjust the time range as needed
//     | where __grid_id  == gridid
//     | where fault_type == "Warning" or fault_type == "Fatal"
//     | order by timestamp asc  // Ensure faults are ordered chronologically
//     | extend signature = toscalar(GetFaults("B02000037X", datetime(2024-08-24T11:19:19.30054Z)))
    
    // | summarize make_list(fault_id)

    // | where __msg_t == 13
    // | summarize faults = make_set(fault_id) by __grid_id, bin(timestamp, 30s) 
    // | where set_has_element(faults , "0C_05_00")
    // // | where tostring("0C_05_00") in faults